//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.3

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "tasks")]
pub struct Model {
	#[sea_orm(primary_key, auto_increment = false)]
	pub id: Uuid,
	pub title: String,
	pub done: bool,
	pub cid: Uuid,
	pub ctime: DateTimeWithTimeZone,
	pub mid: Uuid,
	pub mtime: DateTimeWithTimeZone,
	pub project_id: Uuid,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
	#[sea_orm(
		belongs_to = "super::projects::Entity",
		from = "Column::ProjectId",
		to = "super::projects::Column::Id",
		on_update = "NoAction",
		on_delete = "Cascade"
	)]
	Projects,
}

impl Related<super::projects::Entity> for Entity {
	fn to() -> RelationDef {
		Relation::Projects.def()
	}
}

impl ActiveModelBehavior for ActiveModel {}
